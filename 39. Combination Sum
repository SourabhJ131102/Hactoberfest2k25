class Solution {
    public void helper(int i,int []candidates,int target,List<List<Integer>> ans,ArrayList<Integer> list)
    {
        if(i==candidates.length)
        {
            if(target==0)
            {
                ans.add(new ArrayList<>(list));
                return;
            }
            else
            return;
        }

        if(target>=candidates[i])
        {   
            list.add(candidates[i]);
            helper(i,candidates,target-candidates[i],ans,list);
            list.remove(list.size()-1);
        }
        helper(i+1,candidates,target,ans,list);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        helper(candidates,target,0,new ArrayList<>(),ans);
        return ans;
    }
}
